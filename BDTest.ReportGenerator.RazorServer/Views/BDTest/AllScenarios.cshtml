@using BDTest.ReportGenerator.Builders.Razor.Models
@using BDTest.ReportGenerator.RazorServer.Models
@model BDTest.Maps.BDTestOutputModel

@{
    ViewBag.Title = "Stories";
    Layout = "_Layout";
}

<section class="hero is-info">
    <div class="hero-body">
        <div class="container">
            <h1 class="title">
                All Scenarios
            </h1>
            <h2 class="subtitle">
                Here are all of the <strong>scenarios</strong> in this test run:
            </h2>
        </div>
    </div>
</section>

<section class="section">
    <div class="container">
    <div class="box">
        <div class="has-text-right">
            <button class="button toggle-hide pointer" toggle-alternative-text="Hide Summary" element-id-to-hide="summary">Show Summary</button>
        </div>

        <div class="mt-4 container invisible" id="summary">
            @await Html.PartialAsync("_SummaryGraphics", new SummaryViewModel {Scenarios = Model.Scenarios})
        </div>

        <table class="table is-fullwidth">
            <thead>
            <tr>
                <th class="has-text-centered">Scenario</th>
                <th class="has-text-centered">Status</th>
                <th class="has-text-centered">Duration</th>
                <th class="has-text-centered">Start</th>
                <th class="has-text-centered">End</th>
            </tr>
            </thead>
            <tbody>

            @{ var scenariosGroupedByScenarioText = Model.Scenarios.GroupBy(scenario => scenario.GetScenarioText()).ToList();}
            @{ var scenarioIndex = new ReferenceInt(0); }
            @{ var groupedScenariosCount = new ReferenceInt(0); }
            @foreach (var groupedScenarios in scenariosGroupedByScenarioText)
            {
                @await Html.PartialAsync("_GroupedScenarioTableRow", new GroupedScenarioViewModel
                {
                    Scenarios = groupedScenarios.ToList(),
                    ScenarioIndex = scenarioIndex,
                    GroupedScenarioIndex = groupedScenariosCount,
                })
            }

            </tbody>
        </table>
    </div>

    @foreach (var scenario in scenariosGroupedByScenarioText.SelectMany(groupedScenarios => groupedScenarios))
    {
        @await Html.PartialAsync("_ScenarioModalPopup", new ScenarioViewModel
        {
            Scenario = scenario
        })
    }

    </div>
</section>
