@using BDTest.ReportGenerator.RazorServer.Extensions
@model List<BDTest.ReportGenerator.RazorServer.Models.TestRunOverview>

@{
    ViewBag.Title = "Test Runs";
    Layout = "_Layout";
}

<script>
    function getCheckedIdsAsQueryParameter() {
        let checkboxes = document.getElementsByName("checkbox");
                  let checkedIds = [];
                  
                  for (let i=0; i<checkboxes.length; i++) {
                       // And stick the checked ones onto an array...
                       if (checkboxes[i].checked) {
                          checkedIds.push(checkboxes[i].id);
                       }
                    }
                  
                  let queryString = "?reportIds=" + checkedIds.join(",");
                  
                  return queryString;
    }

    onDomLoaded(function() {
        const compareTimesButton = document.getElementById("compare-times");
                compareTimesButton.addEventListener('click', function() {
                  window.location = "@Url.Action("TestRunTimes", "BDTest")" + getCheckedIdsAsQueryParameter();
                });
                
                const checkFlakinessButton = document.getElementById("check-flakiness");
                        checkFlakinessButton.addEventListener('click', function() {
                          window.location = "@Url.Action("TestRunFlakiness", "BDTest")" + getCheckedIdsAsQueryParameter();
                        });
    });
</script>

<section class="hero is-info">
    <div class="hero-body">
        <div class="container">
            <h1 class="title">
                Test Runs
            </h1>
            <h2 class="subtitle">
                View a report from the list or select some <strong>test runs</strong> to compare:
            </h2>
        </div>
    </div>
</section>

<section class="section">
    <div class="container">
        <div class="has-text-right">
            <button class="button is-info is-rounded" id="compare-times">Compares Times</button>
            <button class="button is-info is-rounded" id="check-flakiness">Check Flakiness</button>
        </div>
        
        <nav class="level level-left">
            <div class="mx-4">
                <label>Filter by Tag</label>
                <input class="input" type="text" id="filter-tag" placeholder="Tag">
            </div>
            
            <div class="mx-4">
                <label>Filter by Environment</label>
                <input class="input" type="text" id="filter-environment" placeholder="Environment">
            </div>
        </nav>
        
        <script>
            function filterRows(inputElementId, tableCellNamesToCheck) {
              let filterInput = document.getElementById(inputElementId);
              filterInput.addEventListener("input", function() {
                  let filterValue = filterInput.value.toLowerCase();
                  let tags = document.getElementsByName(tableCellNamesToCheck);
                  for (const tag of tags) {
                      if(!filterValue) {
                          setElementVisible(tag.parentElement);
                          continue;
                      }
                      
                     if(tag.textContent.toLowerCase().includes(filterValue)) {
                         setElementVisible(tag.parentElement);
                     }  else {
                         setElementInvisible(tag.parentElement);
                     }
                  }
              })
            }
        </script>

        <script>
            filterRows("filter-tag", "tag-field");
            filterRows("filter-environment", "environment-field");
        </script>

        <table class="table is-fullwidth">

            <thead>
            <tr>
                <th class="has-text-centered">Select</th>
                <th class="has-text-centered">Tag</th>
                <th class="has-text-centered">Environment</th>
                <th class="has-text-centered">Date and Time</th>
                <th class="has-text-centered">Status</th>
                <th></th>
            </tr>
            </thead>
            <tbody>

            @foreach (var record in Model)
            {
                <tr>
                    <td class="has-text-centered is-vcentered">
                        <input name="checkbox" type="checkbox" id="@record.RecordId"/>
                    </td>
                    <td name="tag-field" class="has-text-centered is-vcentered">@record.Tag</td>
                    <td name="environment-field" class="has-text-centered is-vcentered">@record.Environment</td>
                    <td class="has-text-centered is-vcentered">@record.DateTime.ToStringForReport()</td>
                    <td class="has-text-centered is-vcentered">
                        <button class="@record.Status.GetCssColourValueForStatus() button is-fullwidth no-pointer is-rounded">
                            @record.Status.AsString()
                        </button>
                    </td>
                    <td class=" is-vcentered">
                        <a href="~/bdtest/report/@record.RecordId/summary">
                            <button class="button is-fullwidth is-info pointer is-rounded">View Report</button>
                        </a>
                    </td>
                </tr>
            }

            </tbody>
        </table>

    </div>
</section>
