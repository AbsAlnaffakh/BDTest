@using BDTest.Razor.Reports.Extensions
@using BDTest.Razor.Reports.Interfaces
@using Microsoft.AspNetCore.Http.Extensions
@model string
@inject IDataRepository _dataRepository

@{
    var allReports = (await _dataRepository.GetAllTestRunRecords()).ToList();
    var thisIndex = allReports.FindIndex(report => report.RecordId == Model);
    var lastReport = allReports.ElementAtOrDefault(thisIndex - 1);
    var nextReport = allReports.ElementAtOrDefault(thisIndex + 1);
}

@if (lastReport != null)
{
    <a href="@GenerateUrl(lastReport.RecordId)">
        <button type="button" class="btn btn-primary px-4 gap-3" onclick="disableButtonAndSpin(this)">Previous Test Run</button>
    </a>
}
@if (nextReport != null)
{
    <a href="@GenerateUrl(nextReport.RecordId)">
        <button type="button" class="btn btn-primary px-4 gap-3" onclick="disableButtonAndSpin(this)">Next Test Run</button>
    </a>
}

@functions
{
    private string GenerateUrl(string id)
    {
        var currentUrl = Context.Request.GetEncodedUrl();
        try
        {
            var currentId = currentUrl.Split("report/")[1].Split("/")[0];
            return currentUrl.Replace(currentId, id);
        }
        catch
        {
            return new Uri(currentUrl).WithPath($"/bdtest/report/{id}/summary").ToString();
        }
    }
}