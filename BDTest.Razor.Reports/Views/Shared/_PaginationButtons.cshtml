@using BDTest.Razor.Reports.Constants
@using BDTest.Razor.Reports.Extensions
@using BDTest.Razor.Reports.Helpers
@model BDTest.Razor.Reports.Models.PaginationInformation

@if (Model.TotalPages <= 1)
{
    return;
}

<nav role="navigation" aria-label="pagination">
    <ul class="pagination justify-content-center">

        @if (Model.CurrentPage != Model.StartPage)
        {
            <li class="page-item"><a class="page-link" href="@Context.GetUrlForPageNumber(Model.CurrentPage - 1)">Previous</a></li>
        }
        
        @if (Model.TotalPages <= 6)
        {
            for (var i = 1; i <= Model.TotalPages; i++)
            {
                @await Html.PartialAsync("_PageButton", (i, Model.CurrentPage))
            }
        }
        else if(Model.CurrentPage > 2 && Model.CurrentPage < Model.EndPage - 2)
        {
            @await Html.PartialAsync("_PageButton", (1, Model.CurrentPage))

            <li class="page-item">
                <span class="page-link">&hellip;</span>
            </li>
              
            @await Html.PartialAsync("_PageButton", (Model.CurrentPage-1, Model.CurrentPage))
              
            @await Html.PartialAsync("_PageButton", (Model.CurrentPage, Model.CurrentPage))
            
            @await Html.PartialAsync("_PageButton", (Model.CurrentPage+1, Model.CurrentPage))
            
            <li class="page-item">
                <span class="page-link">&hellip;</span>
            </li>

            @await Html.PartialAsync("_PageButton", (Model.EndPage, Model.CurrentPage))
        }
        else if (Model.CurrentPage <= 2)
        {
            @await Html.PartialAsync("_PageButton", (1, Model.CurrentPage))
            
            @await Html.PartialAsync("_PageButton", (2, Model.CurrentPage))
            
            @await Html.PartialAsync("_PageButton", (3, Model.CurrentPage))
            
            <li class="page-item">
                <span class="page-link">&hellip;</span>
            </li>

            @await Html.PartialAsync("_PageButton", (Model.EndPage, Model.CurrentPage))
        }
        else if (Model.CurrentPage >= Model.EndPage - 2)
        {
            @await Html.PartialAsync("_PageButton", (1, Model.CurrentPage))
            
            <li class="page-item">
                <span class="page-link">&hellip;</span>
            </li>

            @await Html.PartialAsync("_PageButton", (Model.EndPage-2, Model.CurrentPage))

            @await Html.PartialAsync("_PageButton", (Model.EndPage - 1, Model.CurrentPage))

            @await Html.PartialAsync("_PageButton", (Model.EndPage, Model.CurrentPage))
        }

        @if (Model.CurrentPage != Model.EndPage)
        {
            <li class="page-item"><a class="page-link" href="@Context.GetUrlForPageNumber(Model.CurrentPage + 1)">Next</a></li>
        }
        
        <li class="page-item"><a class="page-link" href="@Context.GetCurrentUrl().WithQueryParameter(PagerQueryParameters.Page, PagerQueryParameters.All)">Show All</a></li>
    </ul>
</nav>