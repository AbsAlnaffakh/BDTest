@using BDTest.NetCore.Razor.ReportMiddleware.Extensions
@using BDTest.Test
@model List<BDTest.NetCore.Razor.ReportMiddleware.Models.TestRunSummary>

@{
    ViewBag.Title = "Test Runs";
    Layout = "_Layout";
}

<script>
    function getCheckedIdsAsQueryParameter() {
        let checkboxes = document.getElementsByName("checkbox");
                  let checkedIds = [];
                  
                  for (let i=0; i<checkboxes.length; i++) {
                       // And stick the checked ones onto an array...
                       if (checkboxes[i].checked) {
                          checkedIds.push(checkboxes[i].id);
                       }
                    }
                  
                  let queryString = "?reportIds=" + checkedIds.join(",");
                  
                  return queryString;
    }

    onDomLoaded(function() {
        const compareTimesButton = document.getElementById("compare-times");
                compareTimesButton.addEventListener('click', function() {
                    let checkIdsQueryParameter = getCheckedIdsAsQueryParameter();
                    if(checkIdsQueryParameter === "?reportIds=") {
                        showSnackbar("Please check some test runs to compare");
                        return;
                    }
                  window.location = "@Url.Action("TestRunTimes", "BDTest")" + checkIdsQueryParameter;
                });
                
                const checkFlakinessButton = document.getElementById("check-flakiness");
                        checkFlakinessButton.addEventListener('click', function() {
                        let checkIdsQueryParameter = getCheckedIdsAsQueryParameter();
                        if(checkIdsQueryParameter === "?reportIds=") {
                            showSnackbar("Please check some test runs to compare");
                            return;
                        }
                          window.location = "@Url.Action("TestRunFlakiness", "BDTest")" + checkIdsQueryParameter;
                        });
    });
</script>

<section class="hero is-info">
    <div class="hero-body">
        <div class="container">
            <h1 class="title">
                Test Runs
            </h1>
            <h2 class="subtitle">
                View a report from the list or select some test runs to compare:
            </h2>
        </div>
    </div>
</section>

<section class="section">
    <div class="container">
        <div class="has-text-right mb-5">
            <button class="button is-info is-rounded" id="compare-times">Compare Times</button>
            <button class="button is-info is-rounded" id="check-flakiness">Check Flakiness</button>
        </div>
        
        <nav class="level">
            <div class="">
                <div class="mx-4">
                    <label>Filter by Tag</label>
                    <input class="input" type="text" id="filter-tag" placeholder="Tag">
                    <div class="has-text-right">
                        <label>Exact Match</label>
                        <input type="checkbox" id="filter-tag-checkbox"/>
                    </div>
                </div>
            </div>
            
            <div class="">
                <div class="mx-4">
                    <label>Filter by Environment</label>
                    <input class="input" type="text" id="filter-environment" placeholder="Environment">
                    <div class="has-text-right">
                        <label>Exact Match</label>
                        <input type="checkbox" id="filter-environment-checkbox"/>
                    </div>
                </div>
            </div>
            
            <div class="">
                <div class="mx-4">
                    <label>Filter by Machine</label>
                    <input class="input" type="text" id="filter-machine-name" placeholder="Machine Name">
                    <div class="has-text-right">
                        <label>Exact Match</label>
                        <input type="checkbox" id="filter-machine-name-checkbox"/>
                    </div>
                </div>
            </div>
        </nav>

        <script>
            let filterObjectsArray = [];
        
             function matches(tag, filterValue, checkbox){
                 if(checkbox.checked === false) {
                    return tag.textContent.toLowerCase().includes(filterValue.toLowerCase());
                 }
                 
                 return tag.textContent === filterValue;
             }
             
             function performFilter() {
                 
                 // Make all visible
                 for (const filterObject of filterObjectsArray) {
                     let tags = document.getElementsByName(filterObject.tableCellNamesToCheck);
                     for (const tag of tags) {
                        setElementVisible(tag.parentElement);   
                     }
                 }
                 
                 for (const filterObject of filterObjectsArray) {
                     let filterValue = filterObject.filterInput.value;
                     
                     if(!filterValue) {
                         continue;
                     }
                     
                     let tags = document.getElementsByName(filterObject.tableCellNamesToCheck);
                     for (const tag of tags) {
                         
                        if(!matches(tag, filterValue, filterObject.checkbox)) {
                            setElementInvisible(tag.parentElement);
                        }
                     }
                 }
             }
        
            function filterRows(inputElementId, checkboxId, tableCellNamesToCheck) {
              let filterInput = document.getElementById(inputElementId);
              let checkbox = document.getElementById(checkboxId);
              
              filterObjectsArray.push({filterInput: filterInput, checkbox: checkbox, tableCellNamesToCheck: tableCellNamesToCheck});
              
              filterInput.addEventListener('input', function() {
                  performFilter();
              });
              
              checkbox.addEventListener('change', function() {
                  performFilter();
              });
            }
        </script>

        <script>
            onDomLoaded(function() {
                filterRows("filter-tag", "filter-tag-checkbox", "tag-field");
                filterRows("filter-environment", "filter-environment-checkbox", "environment-field");
                filterRows("filter-machine-name", "filter-machine-name-checkbox", "machine-name-field");
                
                let headerCheckbox = document.getElementById("checkbox-header");
                headerCheckbox.addEventListener('click', function() {
                  if(headerCheckbox.checked === false) {
                      for (let checkbox of document.getElementsByName("checkbox")) {
                          checkbox.checked = false;
                      }
                  } else {
                      for (let checkbox of document.getElementsByName("checkbox")) {
                        if(!checkbox.parentElement.parentElement.classList.contains("invisible")) {
                            checkbox.checked = true;
                        }
                      }
                  }
                })
            })
        </script>

        <table class="table is-fullwidth">

            <thead>
            <tr class="off-white-bg-color">
                <th class="has-text-centered">
                    <input id="checkbox-header" type="checkbox"/>
                </th>
                <th class="has-text-centered">Tag</th>
                <th class="has-text-centered">Environment</th>
                <th class="has-text-centered">Machine Name</th>
                <th class="has-text-centered">Date and Time</th>
                <th class="has-text-centered">Tests Run</th>
                <th class="has-text-centered">Status</th>
                <th></th>
            </tr>
            </thead>
            <tbody>

            @foreach (var record in Model)
            {
                var status = record.Status.ToString();
                if (record.Status == Status.Failed)
                {
                    status += $" ({record.Counts.Failed})";
                }
                
                
                <tr class="off-white-bg-color">
                    <td class="has-text-centered is-vcentered">
                        <input name="checkbox" type="checkbox" id="@record.RecordId"/>
                    </td>
                    <td name="tag-field" class="has-text-centered is-vcentered">@record.Tag</td>
                    <td name="environment-field" class="has-text-centered is-vcentered">@record.Environment</td>
                    <td name="machine-name-field" class="has-text-centered is-vcentered">@record.MachineName</td>
                    <td class="has-text-centered is-vcentered">@record.StartedAtDateTime.ToStringForReport()</td>
                    <td class="has-text-centered is-vcentered">
                        <span class="title is-4">@record.Counts.Total</span>
                    </td>
                    <td class="has-text-centered is-vcentered">
                        <span class="@record.Status.GetCssColourValueForStatus() tag px-5 is-medium">
                            @status
                        </span>
                    </td>
                    <td class=" is-vcentered">
                        <a href="~/bdtest/report/@record.RecordId/summary">
                            <button class="button is-fullwidth is-dark is-outlined pointer is-rounded">View Report</button>
                        </a>
                    </td>
                </tr>
            }

            </tbody>
        </table>

    </div>
</section>
