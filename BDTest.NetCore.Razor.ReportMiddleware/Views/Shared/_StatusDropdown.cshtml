@using BDTest.NetCore.Razor.ReportMiddleware.Constants
@using BDTest.NetCore.Razor.ReportMiddleware.Helpers
@using BDTest.Test
@model BDTest.NetCore.Razor.ReportMiddleware.Models.StatusDropdownViewModel
@{
  var currentFilterByQueryParameter = Context.Request.GetQueryParameter(StatusConstants.FilterByStatusQueryParameterName);
}
  <button class="btn btn-primary dropdown-toggle" type="button" aria-haspopup="true" aria-controls="dropdown-menu" id="dropdown-main-button" data-bs-toggle="dropdown" aria-expanded="false">
    Show All
    @* <span class="icon is-small"> *@
    @*   <i class="fas fa-angle-down" aria-hidden="true"></i> *@
    @* </span> *@
  </button>
  <ul class="dropdown-menu" id="dropdown-menu" role="menu">
    <li>
      <a class="dropdown-item" onclick="filterByStatus('@StatusConstants.All');">
        Show All
      </a>
    </li>
    <hr class="dropdown-divider">
    <li>
      <a href="#" class="dropdown-item" onclick="filterByStatus('@Status.Passed');">
          Show Passed
      </a>
    </li>
    <li>
      <a class="dropdown-item" onclick="filterByStatus('@Status.Failed');">
          Show Failures
      </a>
    </li>
    <li>
      <a href="#" class="dropdown-item" onclick="filterByStatus('@Status.Skipped');">
          Show Skipped
      </a>
    </li>
    <li>
      <a href="#" class="dropdown-item" onclick="filterByStatus('@Status.Inconclusive');">
          Show Inconclusive
      </a>
    </li>
    <li>
      <a href="#" class="dropdown-item" onclick="filterByStatus('@Status.NotImplemented');">
          Show Not Implemented
      </a>
    </li>
  </ul>


@if (Model.IncludeScript)
{
  <script>
  function filterByStatus(status) {
    let currentFilterQueryParameter = '@currentFilterByQueryParameter'
    
    let mainDropdownButton = document.getElementById("dropdown-main-button");
    
    switch (status) {
      case '@StatusConstants.All':
        mainDropdownButton.innerHTML = 'Show All';
        mainDropdownButton.className = "btn dropdown-toggle btn-primary";
        break;
      case '@Status.Passed':
        mainDropdownButton.innerHTML = 'Show Passed';
        mainDropdownButton.className = "btn dropdown-toggle btn-success";
        break;
      case '@Status.Failed':
        mainDropdownButton.innerHTML = 'Show Failures';
        mainDropdownButton.className = "btn dropdown-toggle btn-danger";
        break;
      case '@Status.Skipped':
        mainDropdownButton.innerHTML = 'Show Skipped';
        mainDropdownButton.className = "btn dropdown-toggle btn-warning";
        break;
      case '@Status.Inconclusive':
        mainDropdownButton.innerHTML = 'Show Inconclusive';
        mainDropdownButton.className = "btn dropdown-toggle btn-warning";
        break;
      case '@Status.NotImplemented':
        mainDropdownButton.innerHTML = 'Show Not Implemented';
        mainDropdownButton.className = "btn dropdown-toggle btn-warning";
        break;
      }
      
      if (currentFilterQueryParameter !== status) {
        window.location.href = getUrlWithAppendedParameter('@StatusConstants.FilterByStatusQueryParameterName', status);
        spinnerCursor()
      }
    }
    
    onDomLoaded(function() {
      filterByStatus('@currentFilterByQueryParameter');
    });
</script>
}