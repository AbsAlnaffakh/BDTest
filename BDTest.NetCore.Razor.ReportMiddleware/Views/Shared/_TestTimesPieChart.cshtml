@model BDTest.NetCore.Razor.ReportMiddleware.Models.ViewModels.TestTimesPieChartViewModel

@{
    var orderedByTime = Model.Scenarios.OrderBy(scenario => scenario.TimeTaken).ToList();
    var shortestScenarios = orderedByTime.Take(5);
    var longestScenarios = orderedByTime.TakeLast(5);
    var scenarios = shortestScenarios.Union(longestScenarios).ToList();
}

@if (orderedByTime.Count > 10)
{
    <div class="d-flex justify-content-center">
        <h1 class="display-6 fs-3 text fw-bold">
            Showing the fastest 5 and slowest 5
        </h1>
    </div>
}

<canvas id="myChart-@Model.StoryIndex"></canvas>

<script>
{       
let chartData = {
    datasets: [{
        data: [
            @foreach (var scenario in scenarios)
                    {
                        @((long)scenario.TimeTaken.TotalMilliseconds)@:,
                    }
            ],
            label: 'Milliseconds',
            backgroundColor: [
                @for (var index = 0; index < scenarios.Count; index++)
                {
                    @:getRandomColor(),
                }
            ]
    }],

    labels: [
        @foreach (var scenario in scenarios)
        {
            @:'@scenario.GetScenarioText()',
        }
    ]
}

let chartConfig = {
    type: 'bar',
    data: chartData,
    options: {
        legend: {
                    display: false
                },
        scales: {
            y: {
              ticks: {
                      // Include a dollar sign in the ticks
                      callback: function(value, index, values) {
                          return value + "ms";
                      }
                  }
            }
          },
        tooltips: {
            callbacks: {
                label: function(tooltipItem, data) {
                  return data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] + "ms";
                }
            }
        }
    }
}

let chart = new Chart(document.getElementById("myChart-@Model.StoryIndex"), chartConfig)
}
</script>