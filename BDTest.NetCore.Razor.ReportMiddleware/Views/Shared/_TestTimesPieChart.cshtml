@model BDTest.NetCore.Razor.ReportMiddleware.Models.TestTimesPieChartViewModel

@{
    var orderedByTime = Model.Scenarios.OrderBy(scenario => scenario.TimeTaken).ToList();
    var shortestScenarios = orderedByTime.Take(5);
    var longestScenarios = orderedByTime.TakeLast(5);
    var scenarios = shortestScenarios.Union(longestScenarios).ToList();
}

@if (orderedByTime.Count > 10)
{
    <div class="has-text-centered">
        <h2 class="subtitle is-5 mb-4">
            Results shown are the fastest 5 and slowest 5 to better show the difference.
        </h2>
    </div>
}

<canvas id="myChart-@Model.StoryIndex" width="400" height="400"></canvas>

    @* <div class="container has-text-right mb-6"> *@
    @*     <p class="is-size-7">* Amounts are in milliseconds</p> *@
    @* </div> *@

<script>

function getRandomColor() {
            let letters = '0123456789ABCDEF'.split('');
            let color = '#';
            for (let i = 0; i < 6; i++ ) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
                }
              
var ctx = document.getElementById('myChart-@Model.StoryIndex').getContext('2d');
data = {
    datasets: [{
        data: [
            @foreach (var scenario in scenarios)
                    {
                        @scenario.TimeTaken.TotalMilliseconds@:,
                    }
            ],
            backgroundColor: [
                @for (var index = 0; index < scenarios.Count; index++)
                {
                    @:getRandomColor(),
                }
            ]
    }],

    // These labels appear in the legend and in the tooltips when hovering different arcs
    labels: [
        @foreach (var scenario in scenarios)
        {
            @:'@scenario.GetScenarioText()',
        }
    ]
}

var myPieChart = new Chart(ctx, {
    type: 'bar',
    data: data,
    options: {
        legend: {
                    display: false
                },
        scales: {
            yAxes: [{
              scaleLabel: {
                labelString: 'Milliseconds'
              }
            }]
          }  
    }
})
</script>